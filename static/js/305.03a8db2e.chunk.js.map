{"version":3,"file":"static/js/305.03a8db2e.chunk.js","mappings":"2NAGaA,EAAOC,EAAAA,EAAAA,GAAH,2LAWJC,GAAWD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,mEAKRG,EAAOH,EAAAA,EAAAA,GAAH,8oBAuBJI,EAASJ,EAAAA,EAAAA,IAAH,sEAKNK,EAAaL,EAAAA,EAAAA,GAAH,yC,SC3CR,SAASM,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC5BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACV,EAAD,UACGQ,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,eAAd,OACV,SAACV,EAAD,WACE,UAACF,EAAD,CAAUa,GAAE,kBAAaH,GAAMI,MAAOP,EAAtC,WACE,SAACJ,EAAD,CACEY,IAAKJ,EACLK,IAAKJ,EACLK,MAAM,QACNC,OAAO,WAET,SAACd,EAAD,UAAaQ,QARNF,U,mJCNNS,EAAQpB,EAAAA,EAAAA,GAAH,+CAILqB,EAAYrB,EAAAA,EAAAA,GAAH,2FAMTsB,EAAatB,EAAAA,EAAAA,KAAH,+CAIVuB,EAAavB,EAAAA,EAAAA,MAAH,4HAQVwB,EAAcxB,EAAAA,EAAAA,MAAH,gQ,GAeCA,EAAAA,EAAAA,GAAH,4LAWEA,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,2DAKDA,EAAAA,EAAAA,GAAH,wqBAwBKA,EAAAA,EAAAA,IAAH,yGAOOA,EAAAA,EAAAA,GAAH,yC,kBCxER,SAASyB,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAeoB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA4BN,EAAAA,EAAAA,UAAS,QAArC,eAAOO,EAAP,KAAeC,EAAf,KACMC,EAAcN,EAAaO,IAAI,UAAY,IAEjDC,EAAAA,EAAAA,YAAU,WACRL,EAAS,MACTE,EAAU,QACU,KAAhBC,IACJD,EAAU,YACVI,EAAAA,EAAAA,IAAeH,GACZI,MAAK,SAAAhC,GAKJ,GAJsB,IAAlBA,EAAOiC,SACTb,EAAUpB,GACV2B,EAAU,aAEU,IAAlB3B,EAAOiC,OACT,OAAOC,QAAQC,OACb,IAAIC,MAAJ,6BAAgCR,EAAYS,OAA5C,uBAILC,OAAM,SAAAd,GACLC,EAASD,GACTG,EAAU,kBAEb,CAACC,KAEJE,EAAAA,EAAAA,YAAU,WACRV,EAAU,MACT,CAACE,IAEJ,IAOMiB,EAAkB,SAAXb,GAA4C,KAAvBE,EAAYS,OACxCG,EAAqB,YAAXd,EACVe,EAAsB,aAAXf,EACXgB,EAAsB,aAAXhB,EAEjB,OACE,iCACE,SAACb,EAAD,6BACA,UAACE,EAAD,CAAY4B,aAAa,MAAMC,SAfd,SAAAC,GACnBA,EAAEC,iBACF,IACMC,EADOF,EAAEG,OACIC,OAAOC,MAC1B3B,EAAgB,CAAEwB,MAAOA,KAWvB,WACE,SAAC/B,EAAD,CAAYmC,KAAK,SAASC,KAAK,YAC/B,SAACnC,EAAD,CAAakC,KAAK,SAASD,MAAM,cAElCX,GAA+B,KAAvBX,EAAYS,SACnB,SAACvB,EAAD,oEAID0B,IAAW,SAAC1B,EAAD,yBACX2B,IAAY,SAAC3B,EAAD,UAAYU,EAAM6B,UAC9BX,IAAY,SAAC,IAAD,CAAW1C,OAAQA","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  width: 1000px;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin: 0 auto;\n`;\n\nexport const LinkItem = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n\nexport const Item = styled.li`\n  padding-top: 10px;\n  width: 220px;\n  height: 300px;\n  text-align: center;\n  margin-bottom: 15px;\n  color: black;\n  border-radius: 20px;\n  -webkit-box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 0.2) inset;\n  -moz-box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 0.2) inset;\n  box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 0.2) inset;\n\n  &:hover {\n    -webkit-box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 1) inset;\n    -moz-box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 1) inset;\n    box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 1) inset;\n  }\n\n  &:not(:nth-of-type(4n)) {\n    margin-right: 25px;\n  }\n`;\n\nexport const Poster = styled.img`\n  border-radius: 20px;\n  object-fit: cover;\n`;\n\nexport const TitleMovie = styled.h4`\n  color: balck;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, LinkItem, Poster, TitleMovie } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, image, original_title }) => (\n        <Item key={id}>\n          <LinkItem to={`/movies/${id}`} state={location}>\n            <Poster\n              src={image}\n              alt={original_title}\n              width=\"150px\"\n              height=\"215px\"\n            />\n            <TitleMovie>{original_title}</TitleMovie>\n          </LinkItem>\n        </Item>\n      ))}\n    </List>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      image: PropTypes.string.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const InfoTitle = styled.h3`\n  margin-top: 50px;\n  text-align: center;\n  font-style: italic;\n`;\n\nexport const SearchForm = styled.form`\n  text-align: center;\n`;\n\nexport const QueryInput = styled.input`\n  height: 35px;\n  width: 220px;\n  font-size: 16px;\n  padding-left: 10px;\n  padding-right: 5px;\n`;\n\nexport const SearchInput = styled.input`\n  height: 35px;\n  width: 90px;\n  margin-left: 10px;\n  border-radius: 10px;\n  border: none;\n  background-color: #4d4dff;\n  color: white;\n  &:hover {\n    background-color: #0000b3;\n  }\n  padding: 0;\n  margin-bottom: 30px;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  width: 1000px;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin: 0 auto;\n`;\n\nexport const LinkItem = styled(Link)`\n  width: 220px;\n  height: 300px;\n`;\n\nexport const Item = styled.li`\n  padding-top: 10px;\n  width: 220px;\n  height: 300px;\n  text-align: center;\n  margin-bottom: 15px;\n  text-decoration: none;\n  color: black;\n  border-radius: 20px;\n  -webkit-box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 0.2) inset;\n  -moz-box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 0.2) inset;\n  box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 0.2) inset;\n\n  &:hover {\n    -webkit-box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 1) inset;\n    -moz-box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 1) inset;\n    box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 1) inset;\n  }\n\n  &:not(:nth-of-type(4n)) {\n    margin-right: 25px;\n  }\n`;\n\nexport const Poster = styled.img`\n  border-radius: 20px;\n  object-fit: cover;\n  width: 150px;\n  height: 225px;\n`;\n\nexport const TitleMovie = styled.h4`\n  color: balck;\n`;\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getFilmByQuery } from 'services/movie-api';\n\nimport {\n  Title,\n  InfoTitle,\n  SearchForm,\n  QueryInput,\n  SearchInput,\n} from './MoviesPage.styled';\n\nimport MovieList from 'components/MovieList/MovieList';\n\nexport default function Moviespage() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const searchQuery = searchParams.get('query') || '';\n\n  useEffect(() => {\n    setError(null);\n    setStatus('idle');\n    if (searchQuery === '') return;\n    setStatus('pending');\n    getFilmByQuery(searchQuery)\n      .then(movies => {\n        if (movies.length !== 0) {\n          setMovies(movies);\n          setStatus('resolved');\n        }\n        if (movies.length === 0) {\n          return Promise.reject(\n            new Error(`Movie by request: \"${searchQuery.trim()}\" - not found.`)\n          );\n        }\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [searchQuery]);\n\n  useEffect(() => {\n    setMovies([]);\n  }, [searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const query = form.search.value;\n    setSearchParams({ query: query });\n  };\n\n  const IDLE = status === 'idle' && searchQuery.trim() === '';\n  const PENDING = status === 'pending';\n  const REJECTED = status === 'rejected';\n  const RESOLVED = status === 'resolved';\n\n  return (\n    <>\n      <Title>Movies search</Title>\n      <SearchForm autoComplete=\"off\" onSubmit={handleSubmit}>\n        <QueryInput type=\"search\" name=\"search\"></QueryInput>\n        <SearchInput type=\"submit\" value=\"Search\"></SearchInput>\n      </SearchForm>\n      {IDLE && searchQuery.trim() === '' && (\n        <InfoTitle>\n          Your request is empty. Enter what you want to find...\n        </InfoTitle>\n      )}\n      {PENDING && <InfoTitle>Loading...</InfoTitle>}\n      {REJECTED && <InfoTitle>{error.message}</InfoTitle>}\n      {RESOLVED && <MovieList movies={movies} />}\n    </>\n  );\n}\n"],"names":["List","styled","LinkItem","Link","Item","Poster","TitleMovie","MovieList","movies","location","useLocation","map","id","image","original_title","to","state","src","alt","width","height","Title","InfoTitle","SearchForm","QueryInput","SearchInput","Moviespage","useState","setMovies","useSearchParams","searchParams","setSearchParams","error","setError","status","setStatus","searchQuery","get","useEffect","getFilmByQuery","then","length","Promise","reject","Error","trim","catch","IDLE","PENDING","REJECTED","RESOLVED","autoComplete","onSubmit","e","preventDefault","query","target","search","value","type","name","message"],"sourceRoot":""}