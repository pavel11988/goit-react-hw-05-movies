{"version":3,"file":"static/js/305.096bc3ef.chunk.js","mappings":"qQAGaA,EAAQC,EAAAA,EAAAA,GAAH,+CAILC,EAAYD,EAAAA,EAAAA,GAAH,2FAMTE,EAAaF,EAAAA,EAAAA,KAAH,+CAIVG,EAAaH,EAAAA,EAAAA,MAAH,4HAQVI,EAAcJ,EAAAA,EAAAA,MAAH,gQAeXK,EAAYL,EAAAA,EAAAA,GAAH,2LAWTM,GAAWN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,kpBAuBRQ,EAAOR,EAAAA,EAAAA,GAAH,iFAMJS,EAAST,EAAAA,EAAAA,IAAH,yGAONU,EAAaV,EAAAA,EAAAA,GAAH,yC,SCWvB,EAhFmB,WACjB,OAA4BW,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOM,EAAP,KAAcC,EAAd,KACA,GAA4BP,EAAAA,EAAAA,UAAS,QAArC,eAAOQ,EAAP,KAAeC,EAAf,KACMC,EAAcN,EAAaO,IAAI,UAAY,IAEjDC,EAAAA,EAAAA,YAAU,WACRL,EAAS,MACTE,EAAU,QACU,KAAhBC,IACJD,EAAU,YACVI,EAAAA,EAAAA,IAAeH,GACZI,MAAK,SAAAb,GAKJ,GAJsB,IAAlBA,EAAOc,SACTb,EAAUD,GACVQ,EAAU,aAEU,IAAlBR,EAAOc,OACT,OAAOC,QAAQC,OACb,IAAIC,MAAJ,6BAAgCR,EAAYS,OAA5C,uBAILC,OAAM,SAAAd,GACLC,EAASD,GACTG,EAAU,kBAEb,CAACC,KAEJE,EAAAA,EAAAA,YAAU,WACRV,EAAU,MACT,CAACE,IAEJ,IAOMiB,EAAkB,SAAXb,GAA4C,KAAvBE,EAAYS,OACxCG,EAAqB,YAAXd,EACVe,EAAsB,aAAXf,EACXgB,EAAsB,aAAXhB,EAEjB,OACE,iCACE,SAACpB,EAAD,6BACA,UAACG,EAAD,CAAYkC,aAAa,MAAMC,SAfd,SAAAC,GACnBA,EAAEC,iBACF,IACMC,EADOF,EAAEG,OACIC,OAAOC,MAC1B3B,EAAgB,CAAEwB,MAAOA,KAWvB,WACE,SAACrC,EAAD,CAAYyC,KAAK,SAASC,KAAK,YAC/B,SAACzC,EAAD,CAAawC,KAAK,SAASD,MAAM,cAElCX,GAA+B,KAAvBX,EAAYS,SACnB,SAAC7B,EAAD,oEAIDgC,IAAW,SAAChC,EAAD,yBACXiC,IAAY,SAACjC,EAAD,UAAYgB,EAAM6B,UAC9BX,IACC,SAAC9B,EAAD,UACGO,EAAOmC,KAAI,SAAAC,GAAK,OACf,SAAC1C,EAAD,CAAyB2C,GAAE,kBAAaD,EAAME,IAA9C,UACE,UAAC1C,EAAD,YACE,SAACC,EAAD,CACE0C,IAAKH,EAAMI,MACXC,IAAKL,EAAMM,eACXC,MAAM,WAER,SAAC7C,EAAD,UAAasC,EAAMM,qBAPRN,EAAME","sources":["pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const InfoTitle = styled.h3`\n  margin-top: 50px;\n  text-align: center;\n  font-style: italic;\n`;\n\nexport const SearchForm = styled.form`\n  text-align: center;\n`;\n\nexport const QueryInput = styled.input`\n  height: 35px;\n  width: 220px;\n  font-size: 16px;\n  padding-left: 10px;\n  padding-right: 5px;\n`;\n\nexport const SearchInput = styled.input`\n  height: 35px;\n  width: 90px;\n  margin-left: 10px;\n  border-radius: 10px;\n  border: none;\n  background-color: #4d4dff;\n  color: white;\n  &:hover {\n    background-color: #0000b3;\n  }\n  padding: 0;\n  margin-bottom: 30px;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  width: 1000px;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin: 0 auto;\n`;\n\nexport const LinkItem = styled(Link)`\n  width: 220px;\n  height: 300px;\n  text-align: center;\n  margin-bottom: 15px;\n  text-decoration: none;\n  color: black;\n  border-radius: 20px;\n  -webkit-box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 0.2) inset;\n  -moz-box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 0.2) inset;\n  box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 0.2) inset;\n\n  &:hover {\n    -webkit-box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 1) inset;\n    -moz-box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 1) inset;\n    box-shadow: 0px -1px 86px -19px rgba(3, 0, 189, 1) inset;\n  }\n\n  &:not(:nth-of-type(4n)) {\n    margin-right: 25px;\n  }\n`;\n\nexport const Item = styled.li`\n  padding-top: 10px;\n  width: 220px;\n  height: 300px;\n`;\n\nexport const Poster = styled.img`\n  border-radius: 20px;\n  object-fit: cover;\n  width: 150px;\n  height: 225px;\n`;\n\nexport const TitleMovie = styled.h4`\n  color: balck;\n`;\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getFilmByQuery } from 'services/movie-api';\n\nimport {\n  Title,\n  InfoTitle,\n  SearchForm,\n  QueryInput,\n  SearchInput,\n  MovieList,\n  LinkItem,\n  Item,\n  Poster,\n  TitleMovie,\n} from './MoviesPage.styled';\n\nconst Moviespage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const searchQuery = searchParams.get('query') || '';\n\n  useEffect(() => {\n    setError(null);\n    setStatus('idle');\n    if (searchQuery === '') return;\n    setStatus('pending');\n    getFilmByQuery(searchQuery)\n      .then(movies => {\n        if (movies.length !== 0) {\n          setMovies(movies);\n          setStatus('resolved');\n        }\n        if (movies.length === 0) {\n          return Promise.reject(\n            new Error(`Movie by request: \"${searchQuery.trim()}\" - not found.`)\n          );\n        }\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [searchQuery]);\n\n  useEffect(() => {\n    setMovies([]);\n  }, [searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const query = form.search.value;\n    setSearchParams({ query: query });\n  };\n\n  const IDLE = status === 'idle' && searchQuery.trim() === '';\n  const PENDING = status === 'pending';\n  const REJECTED = status === 'rejected';\n  const RESOLVED = status === 'resolved';\n\n  return (\n    <>\n      <Title>Movies search</Title>\n      <SearchForm autoComplete=\"off\" onSubmit={handleSubmit}>\n        <QueryInput type=\"search\" name=\"search\"></QueryInput>\n        <SearchInput type=\"submit\" value=\"Search\"></SearchInput>\n      </SearchForm>\n      {IDLE && searchQuery.trim() === '' && (\n        <InfoTitle>\n          Your request is empty. Enter what you want to find...\n        </InfoTitle>\n      )}\n      {PENDING && <InfoTitle>Loading...</InfoTitle>}\n      {REJECTED && <InfoTitle>{error.message}</InfoTitle>}\n      {RESOLVED && (\n        <MovieList>\n          {movies.map(movie => (\n            <LinkItem key={movie.id} to={`/movies/${movie.id}`}>\n              <Item>\n                <Poster\n                  src={movie.image}\n                  alt={movie.original_title}\n                  width=\"150px\"\n                />\n                <TitleMovie>{movie.original_title}</TitleMovie>\n              </Item>\n            </LinkItem>\n          ))}\n        </MovieList>\n      )}\n    </>\n  );\n};\n\nexport default Moviespage;\n"],"names":["Title","styled","InfoTitle","SearchForm","QueryInput","SearchInput","MovieList","LinkItem","Link","Item","Poster","TitleMovie","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","error","setError","status","setStatus","searchQuery","get","useEffect","getFilmByQuery","then","length","Promise","reject","Error","trim","catch","IDLE","PENDING","REJECTED","RESOLVED","autoComplete","onSubmit","e","preventDefault","query","target","search","value","type","name","message","map","movie","to","id","src","image","alt","original_title","width"],"sourceRoot":""}